# Generated by Django 2.2.6 on 2019-11-04 11:54

from django.db import migrations, models
import django.db.models.deletion
import partial_date.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EntityCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='not yet set', help_text='Enter a name for the entity', max_length=200)),
                ('sort_name', models.CharField(default='not yet set', help_text='Sort on this name', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A disambiguation line', max_length=200, null=True)),
            ],
            options={
                'ordering': ['sort_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityCharacterAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EntityCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a show type', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='not yet set', help_text='Enter a name for the entity', max_length=200)),
                ('sort_name', models.CharField(default='not yet set', help_text='Sort on this name', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A disambiguation line', max_length=200, null=True)),
            ],
            options={
                'ordering': ['sort_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityGenreAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A work alias type', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a show type', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityOrganity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='not yet set', help_text='Enter a name for the entity', max_length=200)),
                ('sort_name', models.CharField(default='not yet set', help_text='Sort on this name', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A disambiguation line', max_length=200, null=True)),
                ('start_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
            ],
            options={
                'ordering': ['sort_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityOrganityAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A work alias type', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityOrganityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a show type', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='not yet set', help_text='Enter a name for the entity', max_length=200)),
                ('sort_name', models.CharField(default='not yet set', help_text='Sort on this name', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A disambiguation line', max_length=200, null=True)),
            ],
            options={
                'ordering': ['sort_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityProductionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a show type', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityShow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='not yet set', help_text='Enter a name for the entity', max_length=200)),
                ('sort_name', models.CharField(default='not yet set', help_text='Sort on this name', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A disambiguation line', max_length=200, null=True)),
                ('when_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('when_time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-when_date', '-when_time'],
            },
        ),
        migrations.CreateModel(
            name='EntityShowType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a show type', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='not yet set', help_text='Enter a name for the entity', max_length=200)),
                ('sort_name', models.CharField(default='not yet set', help_text='Sort on this name', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A disambiguation line', max_length=200, null=True)),
                ('href', models.CharField(help_text='Enter the url', max_length=200)),
            ],
            options={
                'ordering': ['sort_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a show type', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='not yet set', help_text='Enter a name for the entity', max_length=200)),
                ('sort_name', models.CharField(default='not yet set', help_text='Sort on this name', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A disambiguation line', max_length=200, null=True)),
            ],
            options={
                'ordering': ['sort_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityWorkAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EntityWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a show type', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationCharacterCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationCharacterGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationCharacterUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationGenreGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationGenreUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationOrganityCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationOrganityGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationOrganityOrganityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationOrganityUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationOrganityWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionOrganityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionProductionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowOrganityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowProductionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowShowType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationUrlUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationWorkCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationWorkGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationWorkUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationWorkWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='relation type', help_text='A name for the x - y relation type', max_length=200)),
                ('inverted_name', models.CharField(default='inverted relation type', help_text='A name for the y - x relation type (inverted)', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='not yet set', help_text='Enter a name for the entity', max_length=200)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RelationWorkWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkwork_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkwork_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkwork_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkwork_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkwork_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='worka', to='catalog.EntityWork')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='workb', to='catalog.EntityWork')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationWorkWorkType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationWorkUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkurl_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkurl_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkurl_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkurl_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkurl_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationWorkUrlType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationWorkGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkgenre_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkgenre_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkgenre_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkgenre_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkgenre_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationWorkGenreType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationWorkCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkcharacter_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkcharacter_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkcharacter_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkcharacter_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationworkcharacter_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationWorkCharacterType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationUrlUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationurlurl_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationurlurl_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationurlurl_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationurlurl_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationurlurl_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='urla', to='catalog.EntityUrl')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='urlb', to='catalog.EntityUrl')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationUrlUrlType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowwork_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowwork_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowwork_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowwork_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowwork_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowWorkType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowurl_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowurl_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowurl_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowurl_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowurl_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowUrlType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowShow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowshow_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowshow_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowshow_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowshow_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowshow_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='showa', to='catalog.EntityShow')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='showb', to='catalog.EntityShow')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowShowType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowproduction_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowproduction_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowproduction_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowproduction_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowproduction_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowProductionType')),
            ],
            options={
                'ordering': ['entity_a'],
            },
        ),
        migrations.CreateModel(
            name='RelationShowOrganity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshoworganity_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshoworganity_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshoworganity_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshoworganity_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshoworganity_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
                ('entity_b', models.ForeignKey(default='provide a value here', on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowOrganityType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowgenre_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowgenre_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowgenre_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowgenre_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowgenre_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowGenreType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationShowCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowcharacter_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowcharacter_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowcharacter_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowcharacter_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationshowcharacter_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowCharacterType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionwork_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionwork_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionwork_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionwork_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionwork_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionWorkType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionurl_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionurl_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionurl_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionurl_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionurl_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionUrlType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionproduction_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionproduction_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionproduction_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionproduction_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionproduction_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productiona', to='catalog.EntityProduction')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productionb', to='catalog.EntityProduction')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionProductionType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionOrganity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionorganity_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionorganity_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionorganity_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionorganity_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionorganity_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionOrganityType')),
            ],
            options={
                'ordering': ['-highlighted_relation', 'entity_b'],
            },
        ),
        migrations.CreateModel(
            name='RelationProductionGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductiongenre_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductiongenre_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductiongenre_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductiongenre_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductiongenre_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionGenreType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationProductionCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductioncharacter_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductioncharacter_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductioncharacter_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductioncharacter_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationproductioncharacter_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionCharacterType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationOrganityWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitywork_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitywork_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitywork_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitywork_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitywork_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationOrganityWorkType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationOrganityUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityurl_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityurl_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityurl_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityurl_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityurl_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationOrganityUrlType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationOrganityOrganity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityorganity_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityorganity_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityorganity_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityorganity_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityorganity_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='organitya', to='catalog.EntityOrganity')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='organityb', to='catalog.EntityOrganity')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationOrganityOrganityType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationOrganityGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitygenre_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitygenre_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitygenre_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitygenre_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitygenre_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationOrganityGenreType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationOrganityCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitycharacter_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitycharacter_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitycharacter_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitycharacter_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationorganitycharacter_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationOrganityCharacterType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationGenreUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationgenreurl_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationgenreurl_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationgenreurl_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationgenreurl_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationgenreurl_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationGenreUrlType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationGenreGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationgenregenre_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationgenregenre_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationgenregenre_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationgenregenre_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationgenregenre_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='genrea', to='catalog.EntityGenre')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='genreb', to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationGenreGenreType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationCharacterUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharacterurl_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharacterurl_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharacterurl_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharacterurl_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharacterurl_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationCharacterUrlType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationCharacterGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactergenre_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactergenre_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactergenre_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactergenre_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactergenre_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationCharacterGenreType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationCharacterCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_a_name', models.CharField(blank=True, help_text='If first entity was credited differently', max_length=200, null=True)),
                ('entity_b_name', models.CharField(blank=True, help_text='If second entity was credited differently', max_length=200, null=True)),
                ('relation_name', models.CharField(blank=True, help_text='A name for the relation', max_length=200, null=True)),
                ('begin_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('end_date', partial_date.fields.PartialDateField(blank=True, default=None, null=True)),
                ('highlighted_relation', models.BooleanField(blank=True, null=True)),
                ('inverted_relation', models.BooleanField(default=False)),
                ('context_of_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactercharacter_context_character', to='catalog.EntityCharacter')),
                ('context_of_organity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactercharacter_context_organity', to='catalog.EntityOrganity')),
                ('context_of_production', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactercharacter_context_production', to='catalog.EntityProduction')),
                ('context_of_show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactercharacter_context_show', to='catalog.EntityShow')),
                ('context_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactercharacter_context_work', to='catalog.EntityWork')),
                ('entity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='charactera', to='catalog.EntityCharacter')),
                ('entity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='characterb', to='catalog.EntityCharacter')),
                ('relation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationCharacterCharacterType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityWorkAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an alias for the organity', max_length=200)),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWorkAliasType')),
                ('super_entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='entitywork',
            name='entity_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityWorkType'),
        ),
        migrations.AddField(
            model_name='entityurl',
            name='entity_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityUrlType'),
        ),
        migrations.AddField(
            model_name='entityshow',
            name='entity_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityShowType'),
        ),
        migrations.AddField(
            model_name='entityproduction',
            name='entity_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityProductionType'),
        ),
        migrations.AddField(
            model_name='entityproduction',
            name='season',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.Season'),
        ),
        migrations.CreateModel(
            name='EntityOrganityAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an alias for the organity', max_length=200)),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganityAliasType')),
                ('super_entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='entityorganity',
            name='entity_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityOrganityType'),
        ),
        migrations.CreateModel(
            name='EntityGenreAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an alias for the organity', max_length=200)),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenreAliasType')),
                ('super_entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='entitygenre',
            name='entity_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityGenreType'),
        ),
        migrations.CreateModel(
            name='EntityCharacterAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacterAliasType')),
                ('super_entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
            ],
        ),
        migrations.AddField(
            model_name='entitycharacter',
            name='entity_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityCharacterType'),
        ),
    ]
