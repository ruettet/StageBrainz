# Generated by Django 2.2.6 on 2019-10-26 16:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EntityOrganisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of an organisation', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityOrganisationAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='An organisation alias type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityOrganisationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for an organisation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, help_text='First name of a person', max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, help_text='Last name of a person', max_length=200, null=True)),
                ('full_name', models.CharField(blank=True, help_text='Single name of a person', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityPersonAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A person alias type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityPersonType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a person type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Title of the stage production', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityProductionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a production type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntitySeason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the season', max_length=200)),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='EntityShow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the show', max_length=200)),
                ('when_date', models.DateField()),
                ('when_time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-when_date', '-when_time'],
            },
        ),
        migrations.CreateModel(
            name='EntityShowType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a show type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityVenue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the venue', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityVenueAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A venue alias type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityVenueType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a venue type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowProductionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the show - production relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowShowType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the show - show relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowVenueType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the show - venue relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowVenue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_name', models.CharField(blank=True, help_text='If show was credited differently', max_length=200, null=True)),
                ('venue_name', models.CharField(blank=True, help_text='If venue was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowVenueType')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityVenue')),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowShow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_a_name', models.CharField(blank=True, help_text='If first show was credited differently', max_length=200, null=True)),
                ('show_b_name', models.CharField(blank=True, help_text='If second show was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowShowType')),
                ('show_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationshowshow_show_a', to='catalog.EntityShow')),
                ('show_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationshowshow_show_b', to='catalog.EntityShow')),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_name', models.CharField(blank=True, help_text='If show was credited differently', max_length=200, null=True)),
                ('production_name', models.CharField(blank=True, help_text='If production was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowProductionType')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
            ],
        ),
        migrations.CreateModel(
            name='EntityVenueAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an alias for the venue', max_length=200)),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityVenueAliasType')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityVenue')),
            ],
        ),
        migrations.AddField(
            model_name='entityvenue',
            name='venue_types',
            field=models.ManyToManyField(blank=True, to='catalog.EntityVenueType'),
        ),
        migrations.AddField(
            model_name='entityshow',
            name='show_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityShowType'),
        ),
        migrations.AddField(
            model_name='entityproduction',
            name='production_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityProductionType'),
        ),
        migrations.AddField(
            model_name='entityproduction',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntitySeason'),
        ),
        migrations.CreateModel(
            name='EntityPersonAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an alias for the person', max_length=200)),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityPersonAliasType')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityPerson')),
            ],
        ),
        migrations.AddField(
            model_name='entityperson',
            name='person_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityPersonType'),
        ),
        migrations.CreateModel(
            name='EntityOrganisationAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an alias for the organisation', max_length=200)),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganisationAliasType')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganisation')),
            ],
        ),
        migrations.AddField(
            model_name='entityorganisation',
            name='organisation_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityOrganisationType'),
        ),
    ]
