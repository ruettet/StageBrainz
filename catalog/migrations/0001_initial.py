# Generated by Django 2.2.6 on 2019-10-30 10:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EntityCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the character', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A disambiguation line', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityCharacterAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A character alias type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a character type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the genre', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityGenreAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A genre alias type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a genre type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityOrganity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of an organity', max_length=200)),
                ('sort_name', models.CharField(default='not yet set', help_text='Sort on this name', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A disambiguation line', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityOrganityAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='An organity alias type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityOrganityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for an organity type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Title of the stage production', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A disambiguation line', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityProductionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a production type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntitySeason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the season', max_length=200)),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='EntityShow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the show', max_length=200)),
                ('when_date', models.DateField()),
                ('when_time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-when_date', '-when_time'],
            },
        ),
        migrations.CreateModel(
            name='EntityShowType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a show type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('href', models.CharField(help_text='Enter the url', max_length=200)),
                ('name', models.CharField(blank=True, help_text='Enter a name for the url', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a url type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the work', max_length=200)),
                ('disambiguation', models.CharField(blank=True, help_text='A Disambiguation Line', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityWorkAliasType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A work alias type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EntityWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for a work type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationCharacterCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the character - character relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationCharacterGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the character - genre relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationCharacterUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the character - url relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationGenreGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the genre - genre relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationGenreUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the genre - url relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganityCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the organity - character relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganityGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the organity - genre relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganityOrganityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the organity - organity relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganityUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the organity - url relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganityWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the organity - work relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the production - character relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the production - genre relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionOrganityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the production - organity relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionProductionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the production - production relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the production - url relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the production - work relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the show - character relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the show - genre relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowOrganityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the show - organity relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowProductionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the show - production relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowShowType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the show - show relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the show - url relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the show - work relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationUrlUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the url - url relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationWorkCharacterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the work - character relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationWorkGenreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the work - genre relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationWorkUrlType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the work - url relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationWorkWorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name for the work - work relation type', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='RelationWorkWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_a_name', models.CharField(blank=True, help_text='If first work was credited differently', max_length=200, null=True)),
                ('work_b_name', models.CharField(blank=True, help_text='If second work was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationWorkWorkType')),
                ('work_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationworkwork_work_a', to='catalog.EntityWork')),
                ('work_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationworkwork_work_b', to='catalog.EntityWork')),
            ],
        ),
        migrations.CreateModel(
            name='RelationWorkUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_name', models.CharField(blank=True, help_text='If work was credited differently', max_length=200, null=True)),
                ('url_name', models.CharField(blank=True, help_text='If url was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationWorkUrlType')),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
            ],
        ),
        migrations.CreateModel(
            name='RelationWorkGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_name', models.CharField(blank=True, help_text='If work was credited differently', max_length=200, null=True)),
                ('genre_name', models.CharField(blank=True, help_text='If genre was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationWorkGenreType')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
            ],
        ),
        migrations.CreateModel(
            name='RelationWorkCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_name', models.CharField(blank=True, help_text='If work was credited differently', max_length=200, null=True)),
                ('character_name', models.CharField(blank=True, help_text='If character was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationWorkCharacterType')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
            ],
        ),
        migrations.CreateModel(
            name='RelationUrlUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_a_name', models.CharField(blank=True, help_text='If first url was credited differently', max_length=200, null=True)),
                ('url_b_name', models.CharField(blank=True, help_text='If second url was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationUrlUrlType')),
                ('url_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationurlurl_url_a', to='catalog.EntityUrl')),
                ('url_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationurlurl_url_b', to='catalog.EntityUrl')),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_name', models.CharField(blank=True, help_text='If show was credited differently', max_length=200, null=True)),
                ('work_name', models.CharField(blank=True, help_text='If work was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowWorkType')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_name', models.CharField(blank=True, help_text='If show was credited differently', max_length=200, null=True)),
                ('url_name', models.CharField(blank=True, help_text='If url was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowUrlType')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowShow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_a_name', models.CharField(blank=True, help_text='If first show was credited differently', max_length=200, null=True)),
                ('show_b_name', models.CharField(blank=True, help_text='If second show was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowShowType')),
                ('show_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationshowshow_show_a', to='catalog.EntityShow')),
                ('show_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationshowshow_show_b', to='catalog.EntityShow')),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_name', models.CharField(blank=True, help_text='If show was credited differently', max_length=200, null=True)),
                ('production_name', models.CharField(blank=True, help_text='If production was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowProductionType')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowOrganity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_name', models.CharField(blank=True, help_text='If show was credited differently', max_length=200, null=True)),
                ('organity_name', models.CharField(blank=True, help_text='If person was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('organity', models.ForeignKey(default='provide a value here', on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowOrganityType')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_name', models.CharField(blank=True, help_text='If show was credited differently', max_length=200, null=True)),
                ('genre_name', models.CharField(blank=True, help_text='If genre was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowGenreType')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
            ],
        ),
        migrations.CreateModel(
            name='RelationShowCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_name', models.CharField(blank=True, help_text='If show was credited differently', max_length=200, null=True)),
                ('character_name', models.CharField(blank=True, help_text='If character was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationShowCharacterType')),
                ('show', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityShow')),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_name', models.CharField(blank=True, help_text='If production was credited differently', max_length=200, null=True)),
                ('work_name', models.CharField(blank=True, help_text='If work was credited differently', max_length=200, null=True)),
                ('relation_str', models.CharField(blank=True, help_text='If relation is credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionWorkType')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_name', models.CharField(blank=True, help_text='If production was credited differently', max_length=200, null=True)),
                ('url_name', models.CharField(blank=True, help_text='If url was credited differently', max_length=200, null=True)),
                ('relation_str', models.CharField(blank=True, help_text='If relation is credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionUrlType')),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_a_name', models.CharField(blank=True, help_text='If first production was credited differently', max_length=200, null=True)),
                ('production_b_name', models.CharField(blank=True, help_text='If second production was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('production_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionproduction_production_a', to='catalog.EntityProduction')),
                ('production_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationproductionproduction_production_b', to='catalog.EntityProduction')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionProductionType')),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionOrganity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_name', models.CharField(blank=True, help_text='If production was credited differently', max_length=200, null=True)),
                ('organity_name', models.CharField(blank=True, help_text='If organity was credited differently', max_length=200, null=True)),
                ('relation_str', models.CharField(blank=True, help_text='If relation is credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('organity', models.ForeignKey(default='provide a value here', on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionOrganityType')),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_name', models.CharField(blank=True, help_text='If production was credited differently', max_length=200, null=True)),
                ('genre_name', models.CharField(blank=True, help_text='If genre was credited differently', max_length=200, null=True)),
                ('relation_str', models.CharField(blank=True, help_text='If relation is credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionGenreType')),
            ],
        ),
        migrations.CreateModel(
            name='RelationProductionCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_name', models.CharField(blank=True, help_text='If production was credited differently', max_length=200, null=True)),
                ('character_name', models.CharField(blank=True, help_text='If character was credited differently', max_length=200, null=True)),
                ('relation_str', models.CharField(blank=True, help_text='If relation is credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityProduction')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationProductionCharacterType')),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganityWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organity_name', models.CharField(blank=True, help_text='If organity was credited differently', max_length=200, null=True)),
                ('work_name', models.CharField(blank=True, help_text='If work was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('organity', models.ForeignKey(default='provide a value here', on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationOrganityWorkType')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganityUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organity_name', models.CharField(blank=True, help_text='If organity was credited differently', max_length=200, null=True)),
                ('genre_name', models.CharField(blank=True, help_text='If url was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('organity', models.ForeignKey(default='provide a value here', on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationOrganityUrlType')),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganityOrganity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organity_a_name', models.CharField(blank=True, help_text='If first organity was credited differently', max_length=200, null=True)),
                ('organity_b_name', models.CharField(blank=True, help_text='If second organity was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('organity_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityorganity_organity_a', to='catalog.EntityOrganity')),
                ('organity_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationorganityorganity_organity_b', to='catalog.EntityOrganity')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationOrganityOrganityType')),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganityGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organity_name', models.CharField(blank=True, help_text='If organity was credited differently', max_length=200, null=True)),
                ('genre_name', models.CharField(blank=True, help_text='If genre was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('organity', models.ForeignKey(default='provide a value here', on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationOrganityGenreType')),
            ],
        ),
        migrations.CreateModel(
            name='RelationOrganityCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organity_name', models.CharField(blank=True, help_text='If organity was credited differently', max_length=200, null=True)),
                ('character_name', models.CharField(blank=True, help_text='If character was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('organity', models.ForeignKey(default='provide a value here', on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationOrganityCharacterType')),
            ],
        ),
        migrations.CreateModel(
            name='RelationGenreUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(blank=True, help_text='If genre was credited differently', max_length=200, null=True)),
                ('url_name', models.CharField(blank=True, help_text='If url was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationGenreUrlType')),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
            ],
        ),
        migrations.CreateModel(
            name='RelationGenreGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_a_name', models.CharField(blank=True, help_text='If first genre was credited differently', max_length=200, null=True)),
                ('genre_b_name', models.CharField(blank=True, help_text='If second genre was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('genre_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationgenregenre_genre_a', to='catalog.EntityGenre')),
                ('genre_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationgenregenre_genre_b', to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationGenreGenreType')),
            ],
        ),
        migrations.CreateModel(
            name='RelationCharacterUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_name', models.CharField(blank=True, help_text='If character was credited differently', max_length=200, null=True)),
                ('url_name', models.CharField(blank=True, help_text='If url was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationCharacterUrlType')),
                ('url', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityUrl')),
            ],
        ),
        migrations.CreateModel(
            name='RelationCharacterGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_name', models.CharField(blank=True, help_text='If character was credited differently', max_length=200, null=True)),
                ('genre_name', models.CharField(blank=True, help_text='If genre was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationCharacterGenreType')),
            ],
        ),
        migrations.CreateModel(
            name='RelationCharacterCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_a_name', models.CharField(blank=True, help_text='If first character was credited differently', max_length=200, null=True)),
                ('character_b_name', models.CharField(blank=True, help_text='If second character was credited differently', max_length=200, null=True)),
                ('begin_date', models.DateField(blank=True, help_text='When did the relation start?', null=True)),
                ('end_date', models.DateField(blank=True, help_text='When did the relation end?', null=True)),
                ('character_a', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactercharacter_character_a', to='catalog.EntityCharacter')),
                ('character_b', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='relationcharactercharacter_character_b', to='catalog.EntityCharacter')),
                ('relation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.RelationCharacterCharacterType')),
            ],
        ),
        migrations.CreateModel(
            name='EntityWorkAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an alias for the work', max_length=200)),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWorkAliasType')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityWork')),
            ],
        ),
        migrations.AddField(
            model_name='entitywork',
            name='work_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityWorkType'),
        ),
        migrations.AddField(
            model_name='entityurl',
            name='url_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityUrlType'),
        ),
        migrations.AddField(
            model_name='entityshow',
            name='show_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityShowType'),
        ),
        migrations.AddField(
            model_name='entityproduction',
            name='production_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityProductionType'),
        ),
        migrations.AddField(
            model_name='entityproduction',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntitySeason'),
        ),
        migrations.CreateModel(
            name='EntityOrganityAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an alias for the organity', max_length=200)),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganityAliasType')),
                ('organity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityOrganity')),
            ],
        ),
        migrations.AddField(
            model_name='entityorganity',
            name='organity_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityOrganityType'),
        ),
        migrations.CreateModel(
            name='EntityGenreAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an alias for the genre', max_length=200)),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenreAliasType')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityGenre')),
            ],
        ),
        migrations.AddField(
            model_name='entitygenre',
            name='genre_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityGenreType'),
        ),
        migrations.CreateModel(
            name='EntityCharacterAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an alias for the character', max_length=200)),
                ('alias_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacterAliasType')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.EntityCharacter')),
            ],
        ),
        migrations.AddField(
            model_name='entitycharacter',
            name='character_type',
            field=models.ManyToManyField(blank=True, to='catalog.EntityCharacterType'),
        ),
    ]
